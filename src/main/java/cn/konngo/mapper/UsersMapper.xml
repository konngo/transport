<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="cn.konngo.dao.UsersDao">
    <resultMap id="users" type="cn.konngo.model.Users">
            <id property="id" column="id"/>
            <result property="username" column="username"/>
            <result property="password" column="password"/>
            <result property="nickname" column="nickname"/>
    </resultMap>

    <sql id="columns">
            `id` ,`username` ,`password` ,`nickname`
    </sql>

    <insert id="insert">
        insert into `users`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="username != null">
                `username`,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="nickname != null">
                `nickname`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
            #{id} ,
            </if>
            <if test="username != null">
            #{username} ,
            </if>
            <if test="password != null">
            #{password} ,
            </if>
            <if test="nickname != null">
            #{nickname} ,
            </if>
        </trim>
    </insert>

    <delete id="delete">
        delete from `users`
        <trim prefix="where " prefixOverrides="and ">
            <if test="id != null">
                and `id` = #{id}
            </if>
            <if test="username != null">
                and `username` = #{username}
            </if>
            <if test="password != null">
                and `password` = #{password}
            </if>
            <if test="nickname != null">
                and `nickname` = #{nickname}
            </if>
        </trim>
    </delete>

    <delete id="deleteByIds">
        delete from `users`
        where `id` in
        <foreach collection="ids" open="(" item="id" separator="," close=")">
        #{id}
        </foreach>
    </delete>

    <update id="update">
        update `users`
        <set>
                <if test="username != null">
                    `username` = #{username},
                </if>
                <if test="password != null">
                    `password` = #{password},
                </if>
                <if test="nickname != null">
                    `nickname` = #{nickname},
                </if>
        </set>
        where id = #{id}
    </update>

    <select id="getById" resultMap="users">
        select
        <include refid="columns" />
        from `users`
        where `id` = #{id}
    </select>

    <select id="login" resultMap="users">
        select
        <include refid="columns" />
        from `users`
        where `username` = #{username} and `password` = #{password}
    </select>

    <select id="list" resultMap="users">
        select
        <include refid="columns" />
        from `users`
        <trim prefix="where " prefixOverrides="and ">
            <if test="id != null">
                and `id` = #{id}
            </if>
            <if test="username != null">
                and `username` = #{username}
            </if>
            <if test="password != null">
                and `password` = #{password}
            </if>
            <if test="nickname != null">
                and `nickname` = #{nickname}
            </if>
        </trim>
    </select>
</mapper>